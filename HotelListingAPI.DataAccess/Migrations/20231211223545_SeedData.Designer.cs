// <auto-generated />
using System;
using HotelListingAPI.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotelListingAPI.DataAccess.Migrations
{
    [DbContext(typeof(HotelListingDbContext))]
    [Migration("20231211223545_SeedData")]
    partial class SeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HotelListingAPI.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ISOCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 4,
                            ISOCode = "ATG",
                            Name = "Antigua and Barbuda"
                        },
                        new
                        {
                            Id = 5,
                            ISOCode = "AIA",
                            Name = "Anguilla"
                        },
                        new
                        {
                            Id = 14,
                            ISOCode = "ABW",
                            Name = "Aruba"
                        },
                        new
                        {
                            Id = 18,
                            ISOCode = "BRB",
                            Name = "Barbados"
                        },
                        new
                        {
                            Id = 26,
                            ISOCode = "BLM",
                            Name = "Saint Barthélemy"
                        },
                        new
                        {
                            Id = 27,
                            ISOCode = "BMU",
                            Name = "Bermuda"
                        },
                        new
                        {
                            Id = 30,
                            ISOCode = "BES",
                            Name = "Bonaire, Sint Eustatius and Saba"
                        },
                        new
                        {
                            Id = 32,
                            ISOCode = "BHS",
                            Name = "Bahamas"
                        },
                        new
                        {
                            Id = 37,
                            ISOCode = "BLZ",
                            Name = "Belize"
                        },
                        new
                        {
                            Id = 38,
                            ISOCode = "CAN",
                            Name = "Canada"
                        },
                        new
                        {
                            Id = 50,
                            ISOCode = "CRI",
                            Name = "Costa Rica"
                        },
                        new
                        {
                            Id = 51,
                            ISOCode = "CUB",
                            Name = "Cuba"
                        },
                        new
                        {
                            Id = 53,
                            ISOCode = "CUW",
                            Name = "Curaçao"
                        },
                        new
                        {
                            Id = 60,
                            ISOCode = "DMA",
                            Name = "Dominica"
                        },
                        new
                        {
                            Id = 61,
                            ISOCode = "DOM",
                            Name = "Dominican Republic"
                        },
                        new
                        {
                            Id = 78,
                            ISOCode = "GRD",
                            Name = "Grenada"
                        },
                        new
                        {
                            Id = 84,
                            ISOCode = "GRL",
                            Name = "Greenland"
                        },
                        new
                        {
                            Id = 87,
                            ISOCode = "GLP",
                            Name = "Guadeloupe"
                        },
                        new
                        {
                            Id = 91,
                            ISOCode = "GTM",
                            Name = "Guatemala"
                        },
                        new
                        {
                            Id = 97,
                            ISOCode = "HND",
                            Name = "Honduras"
                        },
                        new
                        {
                            Id = 99,
                            ISOCode = "HTI",
                            Name = "Haiti"
                        },
                        new
                        {
                            Id = 112,
                            ISOCode = "JAM",
                            Name = "Jamaica"
                        },
                        new
                        {
                            Id = 120,
                            ISOCode = "KNA",
                            Name = "Saint Kitts and Nevis"
                        },
                        new
                        {
                            Id = 124,
                            ISOCode = "CYM",
                            Name = "Cayman Islands"
                        },
                        new
                        {
                            Id = 128,
                            ISOCode = "LCA",
                            Name = "Saint Lucia"
                        },
                        new
                        {
                            Id = 141,
                            ISOCode = "MAF",
                            Name = "Saint Martin"
                        },
                        new
                        {
                            Id = 150,
                            ISOCode = "MTQ",
                            Name = "Martinique"
                        },
                        new
                        {
                            Id = 152,
                            ISOCode = "MSR",
                            Name = "Montserrat"
                        },
                        new
                        {
                            Id = 157,
                            ISOCode = "MEX",
                            Name = "Mexico"
                        },
                        new
                        {
                            Id = 165,
                            ISOCode = "NIC",
                            Name = "Nicaragua"
                        },
                        new
                        {
                            Id = 173,
                            ISOCode = "PAN",
                            Name = "Panama"
                        },
                        new
                        {
                            Id = 180,
                            ISOCode = "SPM",
                            Name = "Saint Pierre and Miquelon"
                        },
                        new
                        {
                            Id = 182,
                            ISOCode = "PRI",
                            Name = "Puerto Rico"
                        },
                        new
                        {
                            Id = 210,
                            ISOCode = "SLV",
                            Name = "El Salvador"
                        },
                        new
                        {
                            Id = 211,
                            ISOCode = "SXM",
                            Name = "Sint Maarten"
                        },
                        new
                        {
                            Id = 214,
                            ISOCode = "TCA",
                            Name = "Turks and Caicos Islands"
                        },
                        new
                        {
                            Id = 226,
                            ISOCode = "TTO",
                            Name = "Trinidad and Tobago"
                        },
                        new
                        {
                            Id = 233,
                            ISOCode = "USA",
                            Name = "United States"
                        },
                        new
                        {
                            Id = 237,
                            ISOCode = "VCT",
                            Name = "Saint Vincent and the Grenadines"
                        },
                        new
                        {
                            Id = 239,
                            ISOCode = "VGB",
                            Name = "British Virgin Islands"
                        },
                        new
                        {
                            Id = 240,
                            ISOCode = "VIR",
                            Name = "U.S. Virgin Islands"
                        });
                });

            modelBuilder.Entity("HotelListingAPI.Models.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Rating")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Toronto",
                            CountryId = 38,
                            Name = "Sandfals Resort and Spa",
                            Rating = 4.5
                        },
                        new
                        {
                            Id = 2,
                            Address = "Toronto",
                            CountryId = 38,
                            Name = "Hotel 2",
                            Rating = 4.5
                        },
                        new
                        {
                            Id = 3,
                            Address = "Toronto",
                            CountryId = 38,
                            Name = "Hotel 3",
                            Rating = 4.5
                        });
                });

            modelBuilder.Entity("HotelListingAPI.Models.Hotel", b =>
                {
                    b.HasOne("HotelListingAPI.Models.Country", "Country")
                        .WithMany("Hotels")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("HotelListingAPI.Models.Country", b =>
                {
                    b.Navigation("Hotels");
                });
#pragma warning restore 612, 618
        }
    }
}
